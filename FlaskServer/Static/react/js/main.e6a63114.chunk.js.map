{"version":3,"sources":["utils/index.js","components/SearchBar/index.js","components/Card/index.js","database/index.js","App.js","index.js"],"names":["apis","params","axios","get","data","post","utils","state","counts","reduce","item","Object","keys","push","StyledCardGrid","styled","div","StyledSavedGrid","SearchBar","articles","selectedArticles","setSelectedArticles","className","href","map","index","name","abr","style","cursor","onClick","Card","journal","link","title","article","date","saveArticle","saved","App","useState","displayArticles","setDisplayArticles","savedArticles","setSavedArticles","database","useEffect","indexOf","then","filter","TransitionGroup","component","length","CSSTransition","timeout","classNames","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.e6a63114.chunk.js","sourcesContent":["import \"axios\"\r\n// utils\r\nimport axios from \"axios\"\r\nimport styled from \"styled-components\";\r\n\r\nexport const apis = {\r\n    searchArticles: (params)=>{\r\n        return axios.get(\"http://127.0.0.1:5000/api/search/\" + params)\r\n    },\r\n  saveArticles: (data) => {\r\n    return axios.post(\"http://127.0.0.1:5000/api/save\", data)\r\n  }}\r\nexport const utils = {\r\n        filterState: (state)=>{\r\n            var counts = state.reduce(function (counts, item) {\r\n                counts[item] = (counts[item] || 0) + 1;\r\n                return counts;\r\n              }, {});\r\n              return Object.keys(counts).reduce(function (state, item) {\r\n                if (counts[item] === 1) {\r\n                  state.push(item);\r\n                }\r\n                return state;\r\n              }, []);\r\n        },\r\n        filterArticles: (articles)=>{\r\n          return articles.filter(function (item, pos) {\r\n            return articles.indexOf(item) === pos;\r\n          });\r\n        }\r\n    }\r\nexport const  StyledCardGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  .transition-enter {\r\n    opacity: 0.01;\r\n    transform: translate(0, -10px);\r\n  }\r\n  .transition-enter-active {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n    transition: all 300ms ease-in;\r\n  }\r\n  .transition-exit {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n  }\r\n  .transition-exit-active {\r\n    opacity: 0.01;\r\n    transform: translate(0, 10px);\r\n    transition: all 300ms ease-in;\r\n  }\r\n`;\r\n\r\nexport const StyledSavedGrid = styled.div`display: grid;\r\ngrid-template-columns: repeat(auto-fill, 220px);\r\ngrid-gap: 20px;\r\n.transition-enter {\r\n  opacity: 0.01;\r\n  transform: translate(0, -10px);\r\n}\r\n.transition-enter-active {\r\n  opacity: 1;\r\n  transform: translate(0, 0);\r\n  transition: all 300ms ease-in;\r\n}\r\n.transition-exit {\r\n  opacity: 1;\r\n  transform: translate(0, 0);\r\n}\r\n.transition-exit-active {\r\n  opacity: 0.01;\r\n  transform: translate(0, 10px);\r\n  transition: all 300ms ease-in;\r\n}`\r\n","import React from \"react\";\r\nimport { utils } from \"../../utils\";\r\nfunction SearchBar({ articles, selectedArticles, setSelectedArticles }) {\r\n  return (\r\n    <nav className=\"navbar navbar-default\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <i className=\"bi bi-book\"></i>\r\n          </a>\r\n        </div>\r\n        <ul className=\"nav navbar-nav\">\r\n          {articles &&\r\n            articles.map(({ name, abr }, index) => (\r\n              <li key={index}  style={{cursor: \"pointer\"}}>\r\n                <a\r\n                className=\"text-dark\"\r\n                  onClick={() =>\r\n                    setSelectedArticles(\r\n                      utils.filterState([...selectedArticles, abr])\r\n                      )\r\n                  }\r\n                >\r\n                  {name}\r\n                </a>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n// utils\r\n\r\nfunction Card({ journal, link, title, article, date, saveArticle, saved }) {\r\n  \r\n  return (\r\n\r\n      <div className=\"card \">\r\n        <div className=\"text-center\">\r\n        <div className=\"card-header\">{journal}</div>\r\n        <div className=\"card-body\">\r\n          <a href={link}>\r\n            <h5 className=\"card-title\">{title}</h5>\r\n          </a>\r\n          <p className=\"card-text\">{article}</p>\r\n          <a\r\n            className={saved ? \"btn btn-warning\" : \"btn btn-primary\"}\r\n            onClick={() => saveArticle({ journal, link, title, article, date })}\r\n          >\r\n            Save\r\n          </a>\r\n        </div>\r\n        <div className=\"card-footer text-muted\">{date}</div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","export default {\r\n    articles: [{name: \"New York Times\", abr: \"NYT\"}, {name:\"Wall Street Journal\", abr: \"WSJ\"}]\r\n}","import { useEffect, useState } from \"react\";\r\n// Components\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport Card from \"./components/Card\";\r\n// utils\r\nimport database from \"./database\";\r\nimport { apis, utils, StyledCardGrid, StyledSavedGrid } from \"./utils\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nfunction App() {\r\n  const [selectedArticles, setSelectedArticles] = useState([]);\r\n  const [displayArticles, setDisplayArticles] = useState([]);\r\n  const [savedArticles, setSavedArticles] = useState([])\r\n  const { articles } = database;\r\n  useEffect(() => {\r\n    setDisplayArticles([]);\r\n    if (selectedArticles.indexOf(\"NYT\") !== -1) {\r\n      apis.searchArticles(\"NYT\").then(({ data }) => {\r\n        data[\"journal\"] = \"NYT\";\r\n        setDisplayArticles([...displayArticles, ...data]);\r\n      });\r\n    }\r\n    if (selectedArticles.indexOf(\"WSJ\") !== -1) {\r\n      apis.searchArticles(\"WSJ\").then(({ data }) => {\r\n        data[\"journal\"] = \"WSJ\";\r\n        setDisplayArticles([...displayArticles, ...data]);\r\n      });\r\n    }\r\n  }, [selectedArticles]);\r\n\r\n  const saveArticle = (data) => {\r\n    setDisplayArticles(\r\n      [...displayArticles].filter(({ link }) => {\r\n        return link !== data.link;\r\n      })\r\n    );\r\n    apis.saveArticles(data).then(({ data }) => {\r\n      setSavedArticles([...data])\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        articles={articles}\r\n        selectedArticles={selectedArticles}\r\n        setSelectedArticles={setSelectedArticles}\r\n      />\r\n      <div className=\"container\">\r\n        {/* Saved */}\r\n        <TransitionGroup component={StyledSavedGrid}>\r\n          {savedArticles.length > 0 ?\r\n            savedArticles.map(\r\n              ({ journal, link, title, article, date, saved }, index) => (\r\n                <CSSTransition\r\n                  key={index}\r\n                  timeout={300}\r\n                  classNames=\"transition\"\r\n                >\r\n                  <Card\r\n                    journal={journal}\r\n                    link={link}\r\n                    title={title}\r\n                    article={article}\r\n                    saved={saved ? true : false}\r\n                    saveArticle={saveArticle}\r\n                    date={date}\r\n                  />\r\n                </CSSTransition>\r\n              )\r\n            )\r\n          :\r\n          <CSSTransition\r\n          timeout={300}\r\n          classNames=\"transition\">\r\n          <h1 style={{display: \"flex\"}}>No Saved Cards</h1>\r\n          </CSSTransition>\r\n          }\r\n        </TransitionGroup>\r\n        {/* Regular */}\r\n        <TransitionGroup component={StyledCardGrid}>\r\n          {displayArticles &&\r\n            displayArticles.map(\r\n              ({ journal, link, title, article, date, saved }, index) => (\r\n                <CSSTransition\r\n                  key={index}\r\n                  timeout={300}\r\n                  classNames=\"transition\"\r\n                >\r\n                  <Card\r\n                    journal={journal}\r\n                    link={link}\r\n                    title={title}\r\n                    article={article}\r\n                    saved={saved ? true : false}\r\n                    saveArticle={saveArticle}\r\n                    date={date}\r\n                  />\r\n                </CSSTransition>\r\n              )\r\n            )}\r\n        </TransitionGroup>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}